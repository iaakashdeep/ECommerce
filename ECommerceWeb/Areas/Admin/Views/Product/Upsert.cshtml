@using ECommerce.DataAccess.Repository.IRepository
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model ProductViewModel
@inject IUnitOfWork _unitodWork

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient mt-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@(Model.Product.Id!=0?"Update":"Create") Product</h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <form method="post" class="row" enctype="multipart/form-data">
            <input asp-for="Product.Id" hidden />
            <input asp-for="Product.ImageUrl" hidden />
            <div class="row">
                <div class="col-10">
                    <div class="border p-3">
                        <div asp-validation-summary="All"></div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Title" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.Title" class="ms-2">Product Title</label>

                            <span asp-validation-for="Product.Title" class="text-danger"></span>
                        </div>
                        <div class="py-2 col-12">
                            <label asp-for="Product.Description" class="ms-2 text-muted">Product Description</label>
                            <textarea asp-for="Product.Description" type="text" class="form-control border-0 shadow"></textarea>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ISBN" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.ISBN" class="ms-2">ISBN</label>

                            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Author" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.Author" class="ms-2">Author</label>

                            <span asp-validation-for="Product.Author" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ListPrice" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.ListPrice" class="ms-2">Price</label>

                            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price" class="ms-2">Price for 1-50</label>

                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price50" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price50" class="ms-2">Price for 50+</label>

                            <span asp-validation-for="Product.Price50" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price100" type="text" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price100" class="ms-2">Price for 100+</label>

                            <span asp-validation-for="Product.Price100" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            @*  <select asp-for="CategoryId" asp-items="ViewBag.Category" type="text" class="form-select border-0 shadow">
                            <option disabled selected>--Select Category--</option>
                            </select> *@
                            @* <select asp-for="CategoryId" asp-items="@(ViewData["Category"] as IEnumerable<SelectListItem>)" type="text" class="form-select border-0 shadow">
                            <option disabled selected>--Select Category--</option>
                            </select>
                            <label asp-for="CategoryId" class="ms-2">Category</label> *@

                            <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow">
                                <option disabled selected>--Select Category--</option>
                            </select>
                            <label asp-for="Product.CategoryId" class="ms-2">Category</label>

                            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input type="file" name="file" class="form-control border-0 shadow" />
                            <label asp-for="Product.ImageUrl" class="ms-2">Image</label>

                           @*  <span asp-validation-for="Product.ImageUrl" class="text-danger"></span> *@
                        </div>
                        <div class="row pt-2">

                            <div class="col-6 col-md-3">
                                @if (Model.Product.Id == 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Edit</button>
                                }
                            </div>


                            <div class="col-6 col-md-3">
                                <a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary border form-control">Back to List</a>
                            </div>

                            @* For checking AddScoped, AddSingleton and AddTransient functionalities uncomment below div *@

                            @* <div class="col-6 col-md-3">
                            Total Count of Products=@_unitodWork.Product.GetAll().Count()
                            </div> *@
                        </div>
                    </div>
                </div>
                <div class="col-2">
                    <img src="@Model.Product.ImageUrl" width="100%" style="border-radius:5px; border:1px solid #bbb9b9"/>
                </div>
            </div>
            
        </form>
    </div>
</div>


@* In case of ViewData we need to typecast first before using *@


@section Scripts {


    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }

}
